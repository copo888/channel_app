syntax = "v1"

info(
	title: "渠道app"
	desc: "type desc here"
	author: "type author here"
	email: "type email here"
	version: "type version here"
)

type PayOrderRequest {
	OrderNo           string `json:"orderNo"`
	PayType           string `json:"payType, optional"`
	ChannelPayType    string `json:"channelPayType, optional"`
	TransactionAmount string `json:"transactionAmount"`
	BankCode          string `json:"bankCode, optional"`
	PageUrl           string `json:"pageUrl, optional"`
	OrderName         string `json:"orderName, optional"`
	MerchantId        string `json:"merchantId, optional"`
	Currency          string `json:"currency, optional"`
	SourceIp          string `json:"sourceIp, optional"`
	UserId            string `json:"userId, optional"`
	JumpType          string `json:"jumpType, optional"`
}

type PayOrderResponse {
	PayPageInfo    string `json:"payPageInfo, optional"`
	PayPageType    string `json:"payPageType, optional"`
	ChannelOrderNo string `json:"channelOrderNo, optional"`
	OrderAmount    string `json:"orderAmount, optional"`
	RealAmount     string `json:"realAmount, optional"`
	Status         string `json:"status, optional"`
	IsCheckOutMer  bool   `json:"isCheckOutMer, optional"`
}

type PayOrderQueryRequest {
	OrderNo        string `json:"orderNo"`
	ChannelOrderNo string `json:"channelOrderNo, optional"`
}

type PayOrderQueryResponse {
	OrderStatus      string  `json:"orderStatus"`
	OrderAmount      float64 `json:"orderAmount"`
	ChannelOrderTime string  `json:"channelOrderTime"`
	ChannelCharge    float64 `json:"channelCharge"`
	CallBackStatus   string  `json:"callBackStatus"`
	OrderUpdateTime  string  `json:"orderUpdateTime"`
	ChannelOrderNo   string  `json:"channelOrderNo"`
}

type Empty {
}

type OrderResponse {
	Code    string      `json:"code"`
	Message string      `json:"message"`
	Data    interface{} `json:"data,optional"`
}

type PayQueryInternalBalanceResponse {
	ChannelNametring   string `json:"channelNametring"`
	ChannelCodingtring string `json:"channelCodingtring"`
	WithdrawBalance    string `json:"withdrawBalance"`
	ProxyPayBalance    string `json:"proxyPayBalance"`
	UpdateTimetring    string `json:"updateTimetring"`
	ErrorCodetring     string `json:"errorCodetring, optional"`
	ErrorMsgtring      string `json:"errorMsgtring, optional"`
}

type ProxyPayOrderRequest {
	OrderNo              string `json:"orderNo"`
	TransactionType      string `json:"transactionType"`
	TransactionAmount    string `json:"transactionAmount"`
	ReceiptAccountNumber string `json:"receiptAccountNumber"`
	ReceiptAccountName   string `json:"receiptAccountName"`
	ReceiptCardProvince  string `json:"receiptCardProvince"`
	ReceiptCardCity      string `json:"receiptCardCity"`
	ReceiptCardArea      string `json:"receiptCardArea"`
	ReceiptCardBranch    string `json:"receiptCardBranch"`
	ReceiptCardBankCode  string `json:"receiptCardBankCode"`
	ReceiptCardBankName  string `json:"receiptCardBankName"`
}

type ProxyPayOrderResponse {
	ChannelOrderNo string `json:"channelOrderNo"`
	OrderStatus    string `json:"orderStatus"`
}

type ProxyPayOrderQueryRequest {
	OrderNo        string `json:"orderNo"` //渠道
	ChannelOrderNo string `json:"channelOrderNo"`
}

type ProxyPayOrderQueryResponse {
	Status           int     `json:"status"`
	ChannelOrderNo   string  `json:"channelOrderNo"`
	OrderStatus      string  `json:"orderStatus"`
	CallBackStatus   string  `json:"callBackStatus"`
	ChannelReplyDate string  `json:"channelReplyDate"`
	ChannelCharge    float64 `json:"channelCharge"`
}

type ProxyPayQueryInternalBalanceResponse {
	ChannelNametring   string `json:"channelNametring"`
	ChannelCodingtring string `json:"channelCodingtring"`
	WithdrawBalance    string `json:"withdrawBalance"`
	ProxyPayBalance    string `json:"proxyPayBalance"`
	UpdateTimetring    string `json:"updateTimetring"`
	ErrorCodetring     string `json:"errorCodetring"`
	ErrorMsgtring      string `json:"errorMsgtring"`
}

type ProxyPayCallBackRequest {
	Ip         string `form:"ip, optional"`
	Charset    string `form:"charset, optional"`
	Amount     string `form:"amount, optional"`
	StatusStr  string `form:"statusStr, optional"`
	OutTradeNo string `form:"outTradeNo, optional"`
	Sign       string `form:"sign, optional"`
	SignType   string `form:"signType, optional"`
	Status     string `form:"status, optional"`
}

type PayCallBackRequest struct {
	MyIp     string `json:"myIp, optional"`
	Code     string `json:"code, optional"`
	Msg      string `json:"msg, optional"`
	Sign     string `json:"sign, optional"`
	MerchId  string `json:"merchId, optional"`
	Money    string `json:"money, optional"`
	TradeNo  string `json:"tradeNo, optional"`
	OrderId  string `json:"orderId, optional"`
	Time     string `json:"time, optional"`
	SignType string `json:"signType, optional"`
	PayType  string `json:"payType, optional"`
}

// form 格式
//type PayCallBackRequest struct {
//	MyIp       string `form:"myIp, optional"`
//	RealAmount string `form:"realAmount, optional"`
//	Charset    string `form:"charset, optional"`
//	Amount     string `form:"amount, optional"`
//	StatusStr  string `form:"statusStr, optional"`
//	OutTradeNo string `form:"outTradeNo, optional"`
//	Sign       string `form:"sign, optional"`
//	SignType   string `form:"signType, optional"`
//	Status     string `form:"status, optional"`
//}

type ReceiverInfoVO {
	CardName   string  `json:"cardName"`
	CardNumber string  `json:"cardNumber"`
	BankName   string  `json:"bankName"`
	BankBranch string  `json:"bankBranch"`
	Amount     float64 `json:"amount"`
	Link       string  `json:"link"`
	Remark     string  `json:"remark"`
}

@server(
	prefix: api/
)

service pay {
	@handler PayOrderHandler
	post /pay (PayOrderRequest) returns (PayOrderResponse)
	
	@handler PayOrderQueryHandler
	post /pay-query (PayOrderQueryRequest) returns (PayOrderQueryResponse)
	
	@handler PayCallBackHandler
	post /pay-call-back (PayCallBackRequest) returns (string)
	
	@handler PayQueryBalanceHandler
	post /pay-query-balance-internal returns (PayQueryInternalBalanceResponse)
	
	@handler ProxyPayOrderHandler
	post /proxy-pay (ProxyPayOrderRequest) returns (ProxyPayOrderResponse)
	
	@handler ProxyPayOrderQueryHandler
	post /proxy-pay-query (ProxyPayOrderQueryRequest) returns (ProxyPayOrderQueryResponse)
	
	@handler ProxyPayCallBackHandler
	post /proxy-pay-call-back (ProxyPayCallBackRequest) returns (string)
	
	@handler ProxyPayQueryBalanceHandler
	post /proxy-pay-query-balance-internal returns (ProxyPayQueryInternalBalanceResponse)
}