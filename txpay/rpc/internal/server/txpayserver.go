// Code generated by goctl. DO NOT EDIT!
// Source: txpay.proto

package server

import (
	"context"
	"google.golang.org/grpc/health/grpc_health_v1"

	"github.com/copo888/channel_app/txpay/rpc/internal/logic"
	"github.com/copo888/channel_app/txpay/rpc/internal/svc"
	"github.com/copo888/channel_app/txpay/rpc/txpay"
)

type TxPayServer struct {
	svcCtx *svc.ServiceContext
	txpay.UnimplementedTxPayServer
}

func NewTxPayServer(svcCtx *svc.ServiceContext) *TxPayServer {
	return &TxPayServer{
		svcCtx: svcCtx,
	}
}

func (s *TxPayServer) Check(ctx context.Context, req *grpc_health_v1.HealthCheckRequest) (*grpc_health_v1.HealthCheckResponse, error) {
	return &grpc_health_v1.HealthCheckResponse{
		Status: grpc_health_v1.HealthCheckResponse_SERVING,
	}, nil
}

func (s *TxPayServer) Watch(req *grpc_health_v1.HealthCheckRequest, w grpc_health_v1.Health_WatchServer) error {
	return nil
}

func (s *TxPayServer) TxPayOrder(ctx context.Context, in *txpay.TxPayOrderRequest) (*txpay.TxPayOrderResponse, error) {
	l := logic.NewTxPayOrderLogic(ctx, s.svcCtx)
	return l.TxPayOrder(in)
}

func (s *TxPayServer) TxPayOrderQuery(ctx context.Context, in *txpay.TxPayQueryOrderRequest) (*txpay.TxPayQueryOrderResponse, error) {
	l := logic.NewTxPayOrderQueryLogic(ctx, s.svcCtx)
	return l.TxPayOrderQuery(in)
}

func (s *TxPayServer) TxPayQueryBalance(ctx context.Context, in *txpay.TxPayQueryBalanceRequest) (*txpay.TxPayQueryInternalBalanceResponse, error) {
	l := logic.NewTxPayQueryBalanceLogic(ctx, s.svcCtx)
	return l.TxPayQueryBalance(in)
}

func (s *TxPayServer) TxProxyPayOrder(ctx context.Context, in *txpay.TxProxyPayOrderRequest) (*txpay.TxProxyPayOrderResponse, error) {
	l := logic.NewTxProxyPayOrderLogic(ctx, s.svcCtx)
	return l.TxProxyPayOrder(in)
}

func (s *TxPayServer) TxProxyPayOrderQuery(ctx context.Context, in *txpay.TxProxyPayQueryRequest) (*txpay.TxProxyPayQueryResponse, error) {
	l := logic.NewTxProxyPayOrderQueryLogic(ctx, s.svcCtx)
	return l.TxProxyPayOrderQuery(in)
}

func (s *TxPayServer) TxProxyPayQueryBalance(ctx context.Context, in *txpay.TxProxyPayQueryInternalBalanceRequest) (*txpay.TxProxyPayQueryInternalBalanceResponse, error) {
	l := logic.NewTxProxyPayQueryBalanceLogic(ctx, s.svcCtx)
	return l.TxProxyPayQueryBalance(in)
}
